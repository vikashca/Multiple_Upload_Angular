<style>
.add-section {
    text-align: center;
}

.add-section span {
    font-size: 14px;
    color: #A8A8A8;
    display: block;
}

.file-upload-button {
    background-color: hsl(0deg 0% 100%);
    /* border-radius: 50%; */
    height: 30px;
    overflow: hidden;
    position: relative;
    width: 170px;
    color: hsl(229deg 46% 43%);
    border: 0.699999988079071px solid hsl(229deg 46% 43%);
    margin-top: 10px;
}

.file-upload-button::after {
    content: 'Select from device';
    color: hsl(229deg 46% 43%);
    font-size: 14px;
    text-align: center;
}

.file-upload-button input[type="file"] {
    font-size: 100px;
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
}

.file-info {
    color: hsl(229deg 46% 43%);
    margin-left: 0.5rem;
}
</style>


<div class="add-section">
    <img src="assets/img/placeholder.png" class="mb-2" alt="icon" />
    <span>Drag a product image here</span>
    <span>- Or -</span>
    <button class="file-upload-button">
        <input type="file" class="form-control" (change)="onSelectFile($event)" multiple accept="image/*" />
    </button>
</div>






imageDeleteFrom: FormGroup;
  imageurls =[];
  base64String: string;
  name: string;
  imagePath: string;
 
  removeImageEdit(i, imagepath) {
    this.imageDeleteFrom.value.id = i;
    this.imageDeleteFrom.value.ImagePath = imagepath;
  }

  removeImage(i) {
    this.imageurls.splice(i, 1);
  }
  onSelectFile(event) {
    if (event.target.files && event.target.files[0]) {
      var filesAmount = event.target.files.length;
      for (let i = 0; i < filesAmount; i++) {
        var reader = new FileReader();
        reader.onload = (event: any) => {
          this.imageurls.push({ base64String: event.target.result, });
        }
        reader.readAsDataURL(event.target.files[i]);
      }
    }
  }
